/* tslint:disable */
/* eslint-disable */
/**
 * Gong API
 * <h2>Overview</h2> <p> The Gong API allows you to: </p> <ol> <li> Receive the following information from Gong: <ol type=\"a\"> <li> Your company\'s <a href=\"#tag--Calls\">calls</a> in Gong </li> <li> Your company\'s <a href=\"#tag--Users\">users</a> in Gong </li> <li> Your company\'s user <a href=\"#tag--Stats\">stats</a> in Gong </li> <li> Your company\'s user <a href=\"#tag--Settings\">settings</a> in Gong </li> <li> Your company\'s <a href=\"#tag--Library\">libraries</a> in Gong </li> </ol></li> <li> <a href=\"#post-/v2/calls\">Upload</a> new or  <a href=\"#put-/v2/calls/-id-/media\">update</a>  call recordings in Gong, in order to support cases where you have an internal system that records  calls or obtains them from a third-party entity. </li> <li> <a href=\"#post-/v2/data-privacy/erase-data-for-email-address\">Data Privacy</a>:  Delete users and all their associated elements.</li> <li> Upload <a href=\"#tag--CRM\">CRM</a> data into Gong.  </li> </ol> <p>Check <a href=\"https://app.gong.io/company/api-authentication?currentTab=MY_API_TAB\">here</a> what\'s your base URL for all API calls. </p> <h2>Authentication</h2>  <p> There are two ways to retrieve credentials to the Gong Public API: </p> <ol><li>Retrieve Manually:<br> <p> In the <a href=\"https://app.gong.io/company/api\">Gong API Page</a> (you must be a technical administrator in Gong), click \"Create\" to receive an <b>Access Key</b>  and an <b>Access Key Secret</b>.<br> </p> <p> Use the Basic Authorization HTTP header (as per <a target=\"_blank\" href=\"https://www.rfc-editor.org/rfc/rfc7617.txt\">RFC</a>) to access the Public API as shown below:<br> <code>Authorization: Basic &lt;token&gt;</code><br> </p> <p> To create the basic token, combine the <b>Access Key</b> and the <b>Access Key Secret</b> with  colon (:) and then encode in Base64 as following:<br> <code>Base64(&lt;accessKey&gt; : &lt;accessKeySecret&gt;)</code><br><br> </p></li> <li>Retrieve through OAuth<br> <p> To obtain the Bearer token, follow the steps described in the <a target=\"_blank\" href=\"https://help.gong.io/hc/en-us/articles/13944551222157-Create-an-app-for-Gong\">Gong OAuth Guide</a>. <br></p> <p> After obtaining the token, use the Bearer Authorization HTTP header (as per <a target=\"_blank\" href=\"https://www.rfc-editor.org/rfc/rfc6750.txt\">RFC</a>) to access the Public API as shown below:<br> <code>Authorization: Bearer &lt;token&gt;</code> </p> </li></ol> <h2>Limits</h2>  <p> By default Gong limits your company\'s access to the service to 3 API calls per second, and 10,000 API calls per day. </p> <p> When the rate of API calls exceeds these limits an HTTP status code <b>429</b> is returned and a <b>Retry-After</b> header indicates  how many seconds to wait before making a new request. </p><p> If required, contact <a target=\"_blank\" href=\"https://help.gong.io\">help.gong.io</a> to change these limits. </p>  <h2>Cursors</h2>  <p> Some API calls that return a list are limited in the amount of records they may return, so multiple API calls may be  required to bring all records. Such an API call also returns a <b>records</b> field, which contains the number of records  in the current page, the current page number and the total number of records. </p> <p> In cases where the total number of records exceeds the number of records thus far retrieved, the <b>records</b> field will also  contain a <b>cursor</b> field which can be used to access the next page of records. To retrieve the next page, repeat the API call with  the <b>cursor</b> value as supplied by the previous API call. All other request inputs should remain the same. </p> <h2>Forward Compatibility</h2>  <p> When coding a system to accept Gong data, take into account that Gong may, without prior warning, add fields to the JSON output.  It is recommended to future proof your code so that it disregards all JSON fields you don\'t actually use.  </p><p></p>
 *
 * The version of the OpenAPI document: V2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import globalAxios from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setBasicAuthToObject, setSearchParams, toPathString, createRequestFunction } from '../common';
// @ts-ignore
import { BASE_PATH, BaseAPI, operationServerMap } from '../base';
/**
 * DataPrivacyApi - axios parameter creator
 * @export
 */
export const DataPrivacyApiAxiosParamCreator = function (configuration) {
    return {
        /**
         * Shows the elements in the Gong system that reference the given email address. Given an emails address, this endpoint returns details of all calls and email messages that reference this address, and any leads or contacts with this email address.  When accessed through a Bearer token authorization method, this endpoint requires the scope \'api:data-privacy:read\'.
         * @summary Retrieve all references to an email address. (/v2/data-privacy/data-for-email-address)
         * @param {string} emailAddress The email address.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        findAllReferencesToEmailAddress: async (emailAddress, options = {}) => {
            // verify required parameter 'emailAddress' is not null or undefined
            assertParamExists('findAllReferencesToEmailAddress', 'emailAddress', emailAddress);
            const localVarPath = `/v2/data-privacy/data-for-email-address`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };
            const localVarHeaderParameter = {};
            const localVarQueryParameter = {};
            // authentication BasicAuth required
            // http basic authentication required
            setBasicAuthToObject(localVarRequestOptions, configuration);
            if (emailAddress !== undefined) {
                localVarQueryParameter['emailAddress'] = emailAddress;
            }
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Shows the elements in the Gong system that reference the given phone number. Given a phone number, this endpoint returns details of any leads or contacts with this phone number and their associated calls and email messages.  When accessed through a Bearer token authorization method, this endpoint requires the scope \'api:data-privacy:read\'.
         * @summary Retrieve all references to a phone number. (/v2/data-privacy/data-for-phone-number)
         * @param {string} phoneNumber The phone number.  This number must start with a + (plus) sign followed by the country code, area code, and local phone number. All other non-digits are ignored.  The following are examples of permitted phone numbers: +1 425 555 2671, +1-425-555-2671, +1 425 5552671, +14255552671, +1 425 555 26 71, +1(425) 555-2671, etc.  Note: This parameter should be URL-encoded.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        findAllReferencesToPhoneNumber: async (phoneNumber, options = {}) => {
            // verify required parameter 'phoneNumber' is not null or undefined
            assertParamExists('findAllReferencesToPhoneNumber', 'phoneNumber', phoneNumber);
            const localVarPath = `/v2/data-privacy/data-for-phone-number`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };
            const localVarHeaderParameter = {};
            const localVarQueryParameter = {};
            // authentication BasicAuth required
            // http basic authentication required
            setBasicAuthToObject(localVarRequestOptions, configuration);
            if (phoneNumber !== undefined) {
                localVarQueryParameter['phoneNumber'] = phoneNumber;
            }
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Given an email address, this endpoint deletes from the Gong system any calls or email messages that reference this address. Email messages sent to or from the address are deleted. Calls where the email address appears (as a lead, contact, attendee or speaker) are deleted. Leads or Contacts with the email address are deleted. The deletion is not immediate, and may take several hours to complete.  This endpoint contains a data integrity protection mechanism to prevent the deletion of an abnormal number of objects. If the deletion fails please contact support at help@gong.io  Delete the data from your CRM and email system before performing this operation so that private data is not re-imported into Gong.  When accessed through a Bearer token authorization method, this endpoint requires the scope \'api:data-privacy:delete\'.
         * @summary Delete the email address, and all associated elements (/v2/data-privacy/erase-data-for-email-address)
         * @param {string} emailAddress The email address.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        purgeEmailAddress: async (emailAddress, options = {}) => {
            // verify required parameter 'emailAddress' is not null or undefined
            assertParamExists('purgeEmailAddress', 'emailAddress', emailAddress);
            const localVarPath = `/v2/data-privacy/erase-data-for-email-address`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
            const localVarHeaderParameter = {};
            const localVarQueryParameter = {};
            // authentication BasicAuth required
            // http basic authentication required
            setBasicAuthToObject(localVarRequestOptions, configuration);
            if (emailAddress !== undefined) {
                localVarQueryParameter['emailAddress'] = emailAddress;
            }
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Given a phone number, this endpoint deletes from the Gong system any leads or contacts with a matching phone number or mobile phone number. Email messages sent to or from these leads/contacts are deleted. Calls where the leads/contacts appear are deleted. The deletion is not immediate, and may take several hours to complete.  This endpoint contains a data integrity protection mechanism to prevent the deletion of an abnormal number of objects. If the deletion fails please contact support at help@gong.io  Delete the data from your CRM and email system before performing this operation so that private data is not re-imported into Gong.  When accessed through a Bearer token authorization method, this endpoint requires the scope \'api:data-privacy:delete\'.
         * @summary Delete the phone number, and all associated elements (/v2/data-privacy/erase-data-for-phone-number)
         * @param {string} phoneNumber The phone number.  This number must start with a + (plus) sign followed by the country code, area code, and local phone number. All other non-digits are ignored.  The following are examples of permitted phone numbers: +1 425 555 2671, +1-425-555-2671, +1 425 5552671, +14255552671, +1 425 555 26 71, +1(425) 555-2671, etc.  Note: This parameter should be URL-encoded.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        purgePhoneNumber: async (phoneNumber, options = {}) => {
            // verify required parameter 'phoneNumber' is not null or undefined
            assertParamExists('purgePhoneNumber', 'phoneNumber', phoneNumber);
            const localVarPath = `/v2/data-privacy/erase-data-for-phone-number`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
            const localVarHeaderParameter = {};
            const localVarQueryParameter = {};
            // authentication BasicAuth required
            // http basic authentication required
            setBasicAuthToObject(localVarRequestOptions, configuration);
            if (phoneNumber !== undefined) {
                localVarQueryParameter['phoneNumber'] = phoneNumber;
            }
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    };
};
/**
 * DataPrivacyApi - functional programming interface
 * @export
 */
export const DataPrivacyApiFp = function (configuration) {
    const localVarAxiosParamCreator = DataPrivacyApiAxiosParamCreator(configuration);
    return {
        /**
         * Shows the elements in the Gong system that reference the given email address. Given an emails address, this endpoint returns details of all calls and email messages that reference this address, and any leads or contacts with this email address.  When accessed through a Bearer token authorization method, this endpoint requires the scope \'api:data-privacy:read\'.
         * @summary Retrieve all references to an email address. (/v2/data-privacy/data-for-email-address)
         * @param {string} emailAddress The email address.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async findAllReferencesToEmailAddress(emailAddress, options) {
            const localVarAxiosArgs = await localVarAxiosParamCreator.findAllReferencesToEmailAddress(emailAddress, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DataPrivacyApi.findAllReferencesToEmailAddress']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * Shows the elements in the Gong system that reference the given phone number. Given a phone number, this endpoint returns details of any leads or contacts with this phone number and their associated calls and email messages.  When accessed through a Bearer token authorization method, this endpoint requires the scope \'api:data-privacy:read\'.
         * @summary Retrieve all references to a phone number. (/v2/data-privacy/data-for-phone-number)
         * @param {string} phoneNumber The phone number.  This number must start with a + (plus) sign followed by the country code, area code, and local phone number. All other non-digits are ignored.  The following are examples of permitted phone numbers: +1 425 555 2671, +1-425-555-2671, +1 425 5552671, +14255552671, +1 425 555 26 71, +1(425) 555-2671, etc.  Note: This parameter should be URL-encoded.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async findAllReferencesToPhoneNumber(phoneNumber, options) {
            const localVarAxiosArgs = await localVarAxiosParamCreator.findAllReferencesToPhoneNumber(phoneNumber, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DataPrivacyApi.findAllReferencesToPhoneNumber']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * Given an email address, this endpoint deletes from the Gong system any calls or email messages that reference this address. Email messages sent to or from the address are deleted. Calls where the email address appears (as a lead, contact, attendee or speaker) are deleted. Leads or Contacts with the email address are deleted. The deletion is not immediate, and may take several hours to complete.  This endpoint contains a data integrity protection mechanism to prevent the deletion of an abnormal number of objects. If the deletion fails please contact support at help@gong.io  Delete the data from your CRM and email system before performing this operation so that private data is not re-imported into Gong.  When accessed through a Bearer token authorization method, this endpoint requires the scope \'api:data-privacy:delete\'.
         * @summary Delete the email address, and all associated elements (/v2/data-privacy/erase-data-for-email-address)
         * @param {string} emailAddress The email address.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async purgeEmailAddress(emailAddress, options) {
            const localVarAxiosArgs = await localVarAxiosParamCreator.purgeEmailAddress(emailAddress, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DataPrivacyApi.purgeEmailAddress']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * Given a phone number, this endpoint deletes from the Gong system any leads or contacts with a matching phone number or mobile phone number. Email messages sent to or from these leads/contacts are deleted. Calls where the leads/contacts appear are deleted. The deletion is not immediate, and may take several hours to complete.  This endpoint contains a data integrity protection mechanism to prevent the deletion of an abnormal number of objects. If the deletion fails please contact support at help@gong.io  Delete the data from your CRM and email system before performing this operation so that private data is not re-imported into Gong.  When accessed through a Bearer token authorization method, this endpoint requires the scope \'api:data-privacy:delete\'.
         * @summary Delete the phone number, and all associated elements (/v2/data-privacy/erase-data-for-phone-number)
         * @param {string} phoneNumber The phone number.  This number must start with a + (plus) sign followed by the country code, area code, and local phone number. All other non-digits are ignored.  The following are examples of permitted phone numbers: +1 425 555 2671, +1-425-555-2671, +1 425 5552671, +14255552671, +1 425 555 26 71, +1(425) 555-2671, etc.  Note: This parameter should be URL-encoded.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async purgePhoneNumber(phoneNumber, options) {
            const localVarAxiosArgs = await localVarAxiosParamCreator.purgePhoneNumber(phoneNumber, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['DataPrivacyApi.purgePhoneNumber']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
    };
};
/**
 * DataPrivacyApi - factory interface
 * @export
 */
export const DataPrivacyApiFactory = function (configuration, basePath, axios) {
    const localVarFp = DataPrivacyApiFp(configuration);
    return {
        /**
         * Shows the elements in the Gong system that reference the given email address. Given an emails address, this endpoint returns details of all calls and email messages that reference this address, and any leads or contacts with this email address.  When accessed through a Bearer token authorization method, this endpoint requires the scope \'api:data-privacy:read\'.
         * @summary Retrieve all references to an email address. (/v2/data-privacy/data-for-email-address)
         * @param {DataPrivacyApiFindAllReferencesToEmailAddressRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        findAllReferencesToEmailAddress(requestParameters, options) {
            return localVarFp.findAllReferencesToEmailAddress(requestParameters.emailAddress, options).then((request) => request(axios, basePath));
        },
        /**
         * Shows the elements in the Gong system that reference the given phone number. Given a phone number, this endpoint returns details of any leads or contacts with this phone number and their associated calls and email messages.  When accessed through a Bearer token authorization method, this endpoint requires the scope \'api:data-privacy:read\'.
         * @summary Retrieve all references to a phone number. (/v2/data-privacy/data-for-phone-number)
         * @param {DataPrivacyApiFindAllReferencesToPhoneNumberRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        findAllReferencesToPhoneNumber(requestParameters, options) {
            return localVarFp.findAllReferencesToPhoneNumber(requestParameters.phoneNumber, options).then((request) => request(axios, basePath));
        },
        /**
         * Given an email address, this endpoint deletes from the Gong system any calls or email messages that reference this address. Email messages sent to or from the address are deleted. Calls where the email address appears (as a lead, contact, attendee or speaker) are deleted. Leads or Contacts with the email address are deleted. The deletion is not immediate, and may take several hours to complete.  This endpoint contains a data integrity protection mechanism to prevent the deletion of an abnormal number of objects. If the deletion fails please contact support at help@gong.io  Delete the data from your CRM and email system before performing this operation so that private data is not re-imported into Gong.  When accessed through a Bearer token authorization method, this endpoint requires the scope \'api:data-privacy:delete\'.
         * @summary Delete the email address, and all associated elements (/v2/data-privacy/erase-data-for-email-address)
         * @param {DataPrivacyApiPurgeEmailAddressRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        purgeEmailAddress(requestParameters, options) {
            return localVarFp.purgeEmailAddress(requestParameters.emailAddress, options).then((request) => request(axios, basePath));
        },
        /**
         * Given a phone number, this endpoint deletes from the Gong system any leads or contacts with a matching phone number or mobile phone number. Email messages sent to or from these leads/contacts are deleted. Calls where the leads/contacts appear are deleted. The deletion is not immediate, and may take several hours to complete.  This endpoint contains a data integrity protection mechanism to prevent the deletion of an abnormal number of objects. If the deletion fails please contact support at help@gong.io  Delete the data from your CRM and email system before performing this operation so that private data is not re-imported into Gong.  When accessed through a Bearer token authorization method, this endpoint requires the scope \'api:data-privacy:delete\'.
         * @summary Delete the phone number, and all associated elements (/v2/data-privacy/erase-data-for-phone-number)
         * @param {DataPrivacyApiPurgePhoneNumberRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        purgePhoneNumber(requestParameters, options) {
            return localVarFp.purgePhoneNumber(requestParameters.phoneNumber, options).then((request) => request(axios, basePath));
        },
    };
};
/**
 * DataPrivacyApi - object-oriented interface
 * @export
 * @class DataPrivacyApi
 * @extends {BaseAPI}
 */
export class DataPrivacyApi extends BaseAPI {
    /**
     * Shows the elements in the Gong system that reference the given email address. Given an emails address, this endpoint returns details of all calls and email messages that reference this address, and any leads or contacts with this email address.  When accessed through a Bearer token authorization method, this endpoint requires the scope \'api:data-privacy:read\'.
     * @summary Retrieve all references to an email address. (/v2/data-privacy/data-for-email-address)
     * @param {DataPrivacyApiFindAllReferencesToEmailAddressRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DataPrivacyApi
     */
    findAllReferencesToEmailAddress(requestParameters, options) {
        return DataPrivacyApiFp(this.configuration).findAllReferencesToEmailAddress(requestParameters.emailAddress, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * Shows the elements in the Gong system that reference the given phone number. Given a phone number, this endpoint returns details of any leads or contacts with this phone number and their associated calls and email messages.  When accessed through a Bearer token authorization method, this endpoint requires the scope \'api:data-privacy:read\'.
     * @summary Retrieve all references to a phone number. (/v2/data-privacy/data-for-phone-number)
     * @param {DataPrivacyApiFindAllReferencesToPhoneNumberRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DataPrivacyApi
     */
    findAllReferencesToPhoneNumber(requestParameters, options) {
        return DataPrivacyApiFp(this.configuration).findAllReferencesToPhoneNumber(requestParameters.phoneNumber, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * Given an email address, this endpoint deletes from the Gong system any calls or email messages that reference this address. Email messages sent to or from the address are deleted. Calls where the email address appears (as a lead, contact, attendee or speaker) are deleted. Leads or Contacts with the email address are deleted. The deletion is not immediate, and may take several hours to complete.  This endpoint contains a data integrity protection mechanism to prevent the deletion of an abnormal number of objects. If the deletion fails please contact support at help@gong.io  Delete the data from your CRM and email system before performing this operation so that private data is not re-imported into Gong.  When accessed through a Bearer token authorization method, this endpoint requires the scope \'api:data-privacy:delete\'.
     * @summary Delete the email address, and all associated elements (/v2/data-privacy/erase-data-for-email-address)
     * @param {DataPrivacyApiPurgeEmailAddressRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DataPrivacyApi
     */
    purgeEmailAddress(requestParameters, options) {
        return DataPrivacyApiFp(this.configuration).purgeEmailAddress(requestParameters.emailAddress, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * Given a phone number, this endpoint deletes from the Gong system any leads or contacts with a matching phone number or mobile phone number. Email messages sent to or from these leads/contacts are deleted. Calls where the leads/contacts appear are deleted. The deletion is not immediate, and may take several hours to complete.  This endpoint contains a data integrity protection mechanism to prevent the deletion of an abnormal number of objects. If the deletion fails please contact support at help@gong.io  Delete the data from your CRM and email system before performing this operation so that private data is not re-imported into Gong.  When accessed through a Bearer token authorization method, this endpoint requires the scope \'api:data-privacy:delete\'.
     * @summary Delete the phone number, and all associated elements (/v2/data-privacy/erase-data-for-phone-number)
     * @param {DataPrivacyApiPurgePhoneNumberRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DataPrivacyApi
     */
    purgePhoneNumber(requestParameters, options) {
        return DataPrivacyApiFp(this.configuration).purgePhoneNumber(requestParameters.phoneNumber, options).then((request) => request(this.axios, this.basePath));
    }
}
